{"ast":null,"code":"function getEntityAtOffset(block, offset) {\n  var entityKey = block.getEntityAt(offset);\n\n  if (entityKey == null) {\n    return null;\n  }\n\n  var startOffset = offset;\n\n  while (startOffset > 0 && block.getEntityAt(startOffset - 1) === entityKey) {\n    startOffset -= 1;\n  }\n\n  var endOffset = startOffset;\n  var blockLength = block.getLength();\n\n  while (endOffset < blockLength && block.getEntityAt(endOffset + 1) === entityKey) {\n    endOffset += 1;\n  }\n\n  return {\n    entityKey: entityKey,\n    blockKey: block.getKey(),\n    startOffset: startOffset,\n    endOffset: endOffset + 1\n  };\n}\n\nexport default function getEntityAtCursor(editorState) {\n  var selection = editorState.getSelection();\n  var startKey = selection.getStartKey();\n  var startBlock = editorState.getCurrentContent().getBlockForKey(startKey);\n  var startOffset = selection.getStartOffset();\n\n  if (selection.isCollapsed()) {\n    // Get the entity before the cursor (unless the cursor is at the start).\n    return getEntityAtOffset(startBlock, startOffset === 0 ? startOffset : startOffset - 1);\n  }\n\n  if (startKey !== selection.getEndKey()) {\n    return null;\n  }\n\n  var endOffset = selection.getEndOffset();\n  var startEntityKey = startBlock.getEntityAt(startOffset);\n\n  for (var i = startOffset; i < endOffset; i++) {\n    var _entityKey = startBlock.getEntityAt(i);\n\n    if (_entityKey == null || _entityKey !== startEntityKey) {\n      return null;\n    }\n  }\n\n  return {\n    entityKey: startEntityKey,\n    blockKey: startBlock.getKey(),\n    startOffset: startOffset,\n    endOffset: endOffset\n  };\n}","map":{"version":3,"sources":["/Users/franklinrodriguez/Desktop/next-test/node_modules/react-rte/lib/lib/getEntityAtCursor.js"],"names":["getEntityAtOffset","block","offset","entityKey","getEntityAt","startOffset","endOffset","blockLength","getLength","blockKey","getKey","getEntityAtCursor","editorState","selection","getSelection","startKey","getStartKey","startBlock","getCurrentContent","getBlockForKey","getStartOffset","isCollapsed","getEndKey","getEndOffset","startEntityKey","i","_entityKey"],"mappings":"AAAA,SAASA,iBAAT,CAA2BC,KAA3B,EAAkCC,MAAlC,EAA0C;AACxC,MAAIC,SAAS,GAAGF,KAAK,CAACG,WAAN,CAAkBF,MAAlB,CAAhB;;AACA,MAAIC,SAAS,IAAI,IAAjB,EAAuB;AACrB,WAAO,IAAP;AACD;;AACD,MAAIE,WAAW,GAAGH,MAAlB;;AACA,SAAOG,WAAW,GAAG,CAAd,IAAmBJ,KAAK,CAACG,WAAN,CAAkBC,WAAW,GAAG,CAAhC,MAAuCF,SAAjE,EAA4E;AAC1EE,IAAAA,WAAW,IAAI,CAAf;AACD;;AACD,MAAIC,SAAS,GAAGD,WAAhB;AACA,MAAIE,WAAW,GAAGN,KAAK,CAACO,SAAN,EAAlB;;AACA,SAAOF,SAAS,GAAGC,WAAZ,IAA2BN,KAAK,CAACG,WAAN,CAAkBE,SAAS,GAAG,CAA9B,MAAqCH,SAAvE,EAAkF;AAChFG,IAAAA,SAAS,IAAI,CAAb;AACD;;AACD,SAAO;AACLH,IAAAA,SAAS,EAAEA,SADN;AAELM,IAAAA,QAAQ,EAAER,KAAK,CAACS,MAAN,EAFL;AAGLL,IAAAA,WAAW,EAAEA,WAHR;AAILC,IAAAA,SAAS,EAAEA,SAAS,GAAG;AAJlB,GAAP;AAMD;;AAED,eAAe,SAASK,iBAAT,CAA2BC,WAA3B,EAAwC;AACrD,MAAIC,SAAS,GAAGD,WAAW,CAACE,YAAZ,EAAhB;AACA,MAAIC,QAAQ,GAAGF,SAAS,CAACG,WAAV,EAAf;AACA,MAAIC,UAAU,GAAGL,WAAW,CAACM,iBAAZ,GAAgCC,cAAhC,CAA+CJ,QAA/C,CAAjB;AACA,MAAIV,WAAW,GAAGQ,SAAS,CAACO,cAAV,EAAlB;;AACA,MAAIP,SAAS,CAACQ,WAAV,EAAJ,EAA6B;AAC3B;AACA,WAAOrB,iBAAiB,CAACiB,UAAD,EAAaZ,WAAW,KAAK,CAAhB,GAAoBA,WAApB,GAAkCA,WAAW,GAAG,CAA7D,CAAxB;AACD;;AACD,MAAIU,QAAQ,KAAKF,SAAS,CAACS,SAAV,EAAjB,EAAwC;AACtC,WAAO,IAAP;AACD;;AACD,MAAIhB,SAAS,GAAGO,SAAS,CAACU,YAAV,EAAhB;AACA,MAAIC,cAAc,GAAGP,UAAU,CAACb,WAAX,CAAuBC,WAAvB,CAArB;;AACA,OAAK,IAAIoB,CAAC,GAAGpB,WAAb,EAA0BoB,CAAC,GAAGnB,SAA9B,EAAyCmB,CAAC,EAA1C,EAA8C;AAC5C,QAAIC,UAAU,GAAGT,UAAU,CAACb,WAAX,CAAuBqB,CAAvB,CAAjB;;AACA,QAAIC,UAAU,IAAI,IAAd,IAAsBA,UAAU,KAAKF,cAAzC,EAAyD;AACvD,aAAO,IAAP;AACD;AACF;;AACD,SAAO;AACLrB,IAAAA,SAAS,EAAEqB,cADN;AAELf,IAAAA,QAAQ,EAAEQ,UAAU,CAACP,MAAX,EAFL;AAGLL,IAAAA,WAAW,EAAEA,WAHR;AAILC,IAAAA,SAAS,EAAEA;AAJN,GAAP;AAMD","sourcesContent":["function getEntityAtOffset(block, offset) {\n  var entityKey = block.getEntityAt(offset);\n  if (entityKey == null) {\n    return null;\n  }\n  var startOffset = offset;\n  while (startOffset > 0 && block.getEntityAt(startOffset - 1) === entityKey) {\n    startOffset -= 1;\n  }\n  var endOffset = startOffset;\n  var blockLength = block.getLength();\n  while (endOffset < blockLength && block.getEntityAt(endOffset + 1) === entityKey) {\n    endOffset += 1;\n  }\n  return {\n    entityKey: entityKey,\n    blockKey: block.getKey(),\n    startOffset: startOffset,\n    endOffset: endOffset + 1\n  };\n}\n\nexport default function getEntityAtCursor(editorState) {\n  var selection = editorState.getSelection();\n  var startKey = selection.getStartKey();\n  var startBlock = editorState.getCurrentContent().getBlockForKey(startKey);\n  var startOffset = selection.getStartOffset();\n  if (selection.isCollapsed()) {\n    // Get the entity before the cursor (unless the cursor is at the start).\n    return getEntityAtOffset(startBlock, startOffset === 0 ? startOffset : startOffset - 1);\n  }\n  if (startKey !== selection.getEndKey()) {\n    return null;\n  }\n  var endOffset = selection.getEndOffset();\n  var startEntityKey = startBlock.getEntityAt(startOffset);\n  for (var i = startOffset; i < endOffset; i++) {\n    var _entityKey = startBlock.getEntityAt(i);\n    if (_entityKey == null || _entityKey !== startEntityKey) {\n      return null;\n    }\n  }\n  return {\n    entityKey: startEntityKey,\n    blockKey: startBlock.getKey(),\n    startOffset: startOffset,\n    endOffset: endOffset\n  };\n}"]},"metadata":{},"sourceType":"module"}