{"ast":null,"code":"import _Object$assign from 'babel-runtime/core-js/object/assign';\nimport _defineProperty from 'babel-runtime/helpers/defineProperty';\nimport _extends from 'babel-runtime/helpers/extends';\nimport _objectWithoutProperties from 'babel-runtime/helpers/objectWithoutProperties';\nimport _Object$getPrototypeOf from 'babel-runtime/core-js/object/get-prototype-of';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport React, { Component } from 'react';\nimport { CompositeDecorator, Editor, EditorState, Modifier, RichUtils, Entity } from 'draft-js';\nimport getDefaultKeyBinding from 'draft-js/lib/getDefaultKeyBinding';\nimport changeBlockDepth from './lib/changeBlockDepth';\nimport changeBlockType from './lib/changeBlockType';\nimport getBlocksInSelection from './lib/getBlocksInSelection';\nimport insertBlockAfter from './lib/insertBlockAfter';\nimport isListItem from './lib/isListItem';\nimport isSoftNewlineEvent from 'draft-js/lib/isSoftNewlineEvent';\nimport EditorToolbar from './lib/EditorToolbar';\nimport EditorValue from './lib/EditorValue';\nimport LinkDecorator from './lib/LinkDecorator';\nimport ImageDecorator from './lib/ImageDecorator';\nimport composite from './lib/composite';\nimport cx from 'classnames';\nimport autobind from 'class-autobind';\nimport EventEmitter from 'events';\nimport { BLOCK_TYPE } from 'draft-js-utils';\nimport './Draft.global.css';\nimport styles from './RichTextEditor.css';\nimport ButtonGroup from './ui/ButtonGroup';\nimport Button from './ui/Button';\nimport Dropdown from './ui/Dropdown';\nvar MAX_LIST_DEPTH = 2; // Custom overrides for \"code\" style.\n\nvar styleMap = {\n  CODE: {\n    backgroundColor: '#f3f3f3',\n    fontFamily: '\"Inconsolata\", \"Menlo\", \"Consolas\", monospace',\n    fontSize: 16,\n    padding: 2\n  }\n};\n\nvar RichTextEditor = function (_Component) {\n  _inherits(RichTextEditor, _Component);\n\n  function RichTextEditor() {\n    _classCallCheck(this, RichTextEditor);\n\n    var _this = _possibleConstructorReturn(this, (RichTextEditor.__proto__ || _Object$getPrototypeOf(RichTextEditor)).apply(this, arguments));\n\n    _this._keyEmitter = new EventEmitter();\n    autobind(_this);\n    return _this;\n  }\n\n  _createClass(RichTextEditor, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      var autoFocus = this.props.autoFocus;\n\n      if (!autoFocus) {\n        return;\n      }\n\n      this._focus();\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _cx;\n\n      var _props = this.props,\n          value = _props.value,\n          className = _props.className,\n          toolbarClassName = _props.toolbarClassName,\n          editorClassName = _props.editorClassName,\n          placeholder = _props.placeholder,\n          customStyleMap = _props.customStyleMap,\n          readOnly = _props.readOnly,\n          disabled = _props.disabled,\n          toolbarConfig = _props.toolbarConfig,\n          blockStyleFn = _props.blockStyleFn,\n          customControls = _props.customControls,\n          keyBindingFn = _props.keyBindingFn,\n          rootStyle = _props.rootStyle,\n          toolbarStyle = _props.toolbarStyle,\n          editorStyle = _props.editorStyle,\n          otherProps = _objectWithoutProperties(_props, ['value', 'className', 'toolbarClassName', 'editorClassName', 'placeholder', 'customStyleMap', 'readOnly', 'disabled', 'toolbarConfig', 'blockStyleFn', 'customControls', 'keyBindingFn', 'rootStyle', 'toolbarStyle', 'editorStyle']);\n\n      var editorState = value.getEditorState();\n      customStyleMap = customStyleMap ? _extends({}, styleMap, customStyleMap) : styleMap; // If the user changes block type before entering any text, we can either\n      // style the placeholder or hide it. Let's just hide it for now.\n\n      var combinedEditorClassName = cx((_cx = {}, _defineProperty(_cx, styles.editor, true), _defineProperty(_cx, styles.hidePlaceholder, this._shouldHidePlaceholder()), _cx), editorClassName);\n\n      if (readOnly == null) {\n        readOnly = disabled;\n      }\n\n      var editorToolbar = void 0;\n\n      if (!readOnly) {\n        editorToolbar = React.createElement(EditorToolbar, {\n          rootStyle: toolbarStyle,\n          className: toolbarClassName,\n          keyEmitter: this._keyEmitter,\n          editorState: editorState,\n          onChange: this._onChange,\n          focusEditor: this._focus,\n          toolbarConfig: toolbarConfig,\n          customControls: customControls\n        });\n      }\n\n      return React.createElement('div', {\n        className: cx(styles.root, className),\n        style: rootStyle\n      }, editorToolbar, React.createElement('div', {\n        className: combinedEditorClassName,\n        style: editorStyle\n      }, React.createElement(Editor, _extends({}, otherProps, {\n        blockStyleFn: composite(defaultBlockStyleFn, blockStyleFn),\n        customStyleMap: customStyleMap,\n        editorState: editorState,\n        handleReturn: this._handleReturn,\n        keyBindingFn: keyBindingFn || this._customKeyHandler,\n        handleKeyCommand: this._handleKeyCommand,\n        onTab: this._onTab,\n        onChange: this._onChange,\n        placeholder: placeholder,\n        ref: 'editor',\n        spellCheck: true,\n        readOnly: readOnly\n      }))));\n    }\n  }, {\n    key: '_shouldHidePlaceholder',\n    value: function _shouldHidePlaceholder() {\n      var editorState = this.props.value.getEditorState();\n      var contentState = editorState.getCurrentContent();\n\n      if (!contentState.hasText()) {\n        if (contentState.getBlockMap().first().getType() !== 'unstyled') {\n          return true;\n        }\n      }\n\n      return false;\n    }\n  }, {\n    key: '_handleReturn',\n    value: function _handleReturn(event) {\n      var handleReturn = this.props.handleReturn;\n\n      if (handleReturn != null && handleReturn(event)) {\n        return true;\n      }\n\n      if (this._handleReturnSoftNewline(event)) {\n        return true;\n      }\n\n      if (this._handleReturnEmptyListItem()) {\n        return true;\n      }\n\n      if (this._handleReturnSpecialBlock()) {\n        return true;\n      }\n\n      return false;\n    } // `shift + return` should insert a soft newline.\n\n  }, {\n    key: '_handleReturnSoftNewline',\n    value: function _handleReturnSoftNewline(event) {\n      var editorState = this.props.value.getEditorState();\n\n      if (isSoftNewlineEvent(event)) {\n        var selection = editorState.getSelection();\n\n        if (selection.isCollapsed()) {\n          this._onChange(RichUtils.insertSoftNewline(editorState));\n        } else {\n          var content = editorState.getCurrentContent();\n          var newContent = Modifier.removeRange(content, selection, 'forward');\n          var newSelection = newContent.getSelectionAfter();\n\n          var _block = newContent.getBlockForKey(newSelection.getStartKey());\n\n          newContent = Modifier.insertText(newContent, newSelection, '\\n', _block.getInlineStyleAt(newSelection.getStartOffset()), null);\n\n          this._onChange(EditorState.push(editorState, newContent, 'insert-fragment'));\n        }\n\n        return true;\n      }\n\n      return false;\n    } // If the cursor is in an empty list item when return is pressed, then the\n    // block type should change to normal (end the list).\n\n  }, {\n    key: '_handleReturnEmptyListItem',\n    value: function _handleReturnEmptyListItem() {\n      var editorState = this.props.value.getEditorState();\n      var selection = editorState.getSelection();\n\n      if (selection.isCollapsed()) {\n        var contentState = editorState.getCurrentContent();\n        var blockKey = selection.getStartKey();\n\n        var _block2 = contentState.getBlockForKey(blockKey);\n\n        if (isListItem(_block2) && _block2.getLength() === 0) {\n          var depth = _block2.getDepth();\n\n          var newState = depth === 0 ? changeBlockType(editorState, blockKey, BLOCK_TYPE.UNSTYLED) : changeBlockDepth(editorState, blockKey, depth - 1);\n\n          this._onChange(newState);\n\n          return true;\n        }\n      }\n\n      return false;\n    } // If the cursor is at the end of a special block (any block type other than\n    // normal or list item) when return is pressed, new block should be normal.\n\n  }, {\n    key: '_handleReturnSpecialBlock',\n    value: function _handleReturnSpecialBlock() {\n      var editorState = this.props.value.getEditorState();\n      var selection = editorState.getSelection();\n\n      if (selection.isCollapsed()) {\n        var contentState = editorState.getCurrentContent();\n        var blockKey = selection.getStartKey();\n\n        var _block3 = contentState.getBlockForKey(blockKey);\n\n        if (!isListItem(_block3) && _block3.getType() !== BLOCK_TYPE.UNSTYLED) {\n          // If cursor is at end.\n          if (_block3.getLength() === selection.getStartOffset()) {\n            var newEditorState = insertBlockAfter(editorState, blockKey, BLOCK_TYPE.UNSTYLED);\n\n            this._onChange(newEditorState);\n\n            return true;\n          }\n        }\n      }\n\n      return false;\n    }\n  }, {\n    key: '_onTab',\n    value: function _onTab(event) {\n      var editorState = this.props.value.getEditorState();\n      var newEditorState = RichUtils.onTab(event, editorState, MAX_LIST_DEPTH);\n\n      if (newEditorState !== editorState) {\n        this._onChange(newEditorState);\n      }\n    }\n  }, {\n    key: '_customKeyHandler',\n    value: function _customKeyHandler(event) {\n      // Allow toolbar to catch key combinations.\n      var eventFlags = {};\n\n      this._keyEmitter.emit('keypress', event, eventFlags);\n\n      if (eventFlags.wasHandled) {\n        return null;\n      } else {\n        return getDefaultKeyBinding(event);\n      }\n    }\n  }, {\n    key: '_handleKeyCommand',\n    value: function _handleKeyCommand(command) {\n      var editorState = this.props.value.getEditorState();\n      var newEditorState = RichUtils.handleKeyCommand(editorState, command);\n\n      if (newEditorState) {\n        this._onChange(newEditorState);\n\n        return true;\n      } else {\n        return false;\n      }\n    }\n  }, {\n    key: '_onChange',\n    value: function _onChange(editorState) {\n      var _props2 = this.props,\n          onChange = _props2.onChange,\n          value = _props2.value;\n\n      if (onChange == null) {\n        return;\n      }\n\n      var newValue = value.setEditorState(editorState);\n      var newEditorState = newValue.getEditorState();\n\n      this._handleInlineImageSelection(newEditorState);\n\n      onChange(newValue);\n    }\n  }, {\n    key: '_handleInlineImageSelection',\n    value: function _handleInlineImageSelection(editorState) {\n      var selection = editorState.getSelection();\n      var blocks = getBlocksInSelection(editorState);\n\n      var selectImage = function selectImage(block, offset) {\n        var imageKey = block.getEntityAt(offset);\n        Entity.mergeData(imageKey, {\n          selected: true\n        });\n      };\n\n      var isInMiddleBlock = function isInMiddleBlock(index) {\n        return index > 0 && index < blocks.size - 1;\n      };\n\n      var isWithinStartBlockSelection = function isWithinStartBlockSelection(offset, index) {\n        return index === 0 && offset > selection.getStartOffset();\n      };\n\n      var isWithinEndBlockSelection = function isWithinEndBlockSelection(offset, index) {\n        return index === blocks.size - 1 && offset < selection.getEndOffset();\n      };\n\n      blocks.toIndexedSeq().forEach(function (block, index) {\n        ImageDecorator.strategy(block, function (offset) {\n          if (isWithinStartBlockSelection(offset, index) || isInMiddleBlock(index) || isWithinEndBlockSelection(offset, index)) {\n            selectImage(block, offset);\n          }\n        });\n      });\n    }\n  }, {\n    key: '_focus',\n    value: function _focus() {\n      this.refs.editor.focus();\n    }\n  }]);\n\n  return RichTextEditor;\n}(Component);\n\nexport default RichTextEditor;\n\nfunction defaultBlockStyleFn(block) {\n  var result = styles.block;\n\n  switch (block.getType()) {\n    case 'unstyled':\n      return cx(result, styles.paragraph);\n\n    case 'blockquote':\n      return cx(result, styles.blockquote);\n\n    case 'code-block':\n      return cx(result, styles.codeBlock);\n\n    default:\n      return result;\n  }\n}\n\nvar decorator = new CompositeDecorator([LinkDecorator, ImageDecorator]);\n\nfunction createEmptyValue() {\n  return EditorValue.createEmpty(decorator);\n}\n\nfunction createValueFromString(markup, format, options) {\n  return EditorValue.createFromString(markup, format, decorator, options);\n} // $FlowIssue - This should probably not be done this way.\n\n\n_Object$assign(RichTextEditor, {\n  EditorValue: EditorValue,\n  decorator: decorator,\n  createEmptyValue: createEmptyValue,\n  createValueFromString: createValueFromString,\n  ButtonGroup: ButtonGroup,\n  Button: Button,\n  Dropdown: Dropdown\n});\n\nexport { EditorValue, decorator, createEmptyValue, createValueFromString, ButtonGroup, Button, Dropdown };","map":{"version":3,"sources":["/Users/franklinrodriguez/Desktop/next-test/node_modules/react-rte/lib/RichTextEditor.js"],"names":["_Object$assign","_defineProperty","_extends","_objectWithoutProperties","_Object$getPrototypeOf","_classCallCheck","_createClass","_possibleConstructorReturn","_inherits","React","Component","CompositeDecorator","Editor","EditorState","Modifier","RichUtils","Entity","getDefaultKeyBinding","changeBlockDepth","changeBlockType","getBlocksInSelection","insertBlockAfter","isListItem","isSoftNewlineEvent","EditorToolbar","EditorValue","LinkDecorator","ImageDecorator","composite","cx","autobind","EventEmitter","BLOCK_TYPE","styles","ButtonGroup","Button","Dropdown","MAX_LIST_DEPTH","styleMap","CODE","backgroundColor","fontFamily","fontSize","padding","RichTextEditor","_Component","_this","__proto__","apply","arguments","_keyEmitter","key","value","componentDidMount","autoFocus","props","_focus","render","_cx","_props","className","toolbarClassName","editorClassName","placeholder","customStyleMap","readOnly","disabled","toolbarConfig","blockStyleFn","customControls","keyBindingFn","rootStyle","toolbarStyle","editorStyle","otherProps","editorState","getEditorState","combinedEditorClassName","editor","hidePlaceholder","_shouldHidePlaceholder","editorToolbar","createElement","keyEmitter","onChange","_onChange","focusEditor","root","style","defaultBlockStyleFn","handleReturn","_handleReturn","_customKeyHandler","handleKeyCommand","_handleKeyCommand","onTab","_onTab","ref","spellCheck","contentState","getCurrentContent","hasText","getBlockMap","first","getType","event","_handleReturnSoftNewline","_handleReturnEmptyListItem","_handleReturnSpecialBlock","selection","getSelection","isCollapsed","insertSoftNewline","content","newContent","removeRange","newSelection","getSelectionAfter","_block","getBlockForKey","getStartKey","insertText","getInlineStyleAt","getStartOffset","push","blockKey","_block2","getLength","depth","getDepth","newState","UNSTYLED","_block3","newEditorState","eventFlags","emit","wasHandled","command","_props2","newValue","setEditorState","_handleInlineImageSelection","blocks","selectImage","block","offset","imageKey","getEntityAt","mergeData","selected","isInMiddleBlock","index","size","isWithinStartBlockSelection","isWithinEndBlockSelection","getEndOffset","toIndexedSeq","forEach","strategy","refs","focus","result","paragraph","blockquote","codeBlock","decorator","createEmptyValue","createEmpty","createValueFromString","markup","format","options","createFromString"],"mappings":"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","sourcesContent":["import _Object$assign from 'babel-runtime/core-js/object/assign';\nimport _defineProperty from 'babel-runtime/helpers/defineProperty';\nimport _extends from 'babel-runtime/helpers/extends';\nimport _objectWithoutProperties from 'babel-runtime/helpers/objectWithoutProperties';\nimport _Object$getPrototypeOf from 'babel-runtime/core-js/object/get-prototype-of';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport React, { Component } from 'react';\nimport { CompositeDecorator, Editor, EditorState, Modifier, RichUtils, Entity } from 'draft-js';\nimport getDefaultKeyBinding from 'draft-js/lib/getDefaultKeyBinding';\nimport changeBlockDepth from './lib/changeBlockDepth';\nimport changeBlockType from './lib/changeBlockType';\nimport getBlocksInSelection from './lib/getBlocksInSelection';\nimport insertBlockAfter from './lib/insertBlockAfter';\nimport isListItem from './lib/isListItem';\nimport isSoftNewlineEvent from 'draft-js/lib/isSoftNewlineEvent';\nimport EditorToolbar from './lib/EditorToolbar';\nimport EditorValue from './lib/EditorValue';\nimport LinkDecorator from './lib/LinkDecorator';\nimport ImageDecorator from './lib/ImageDecorator';\nimport composite from './lib/composite';\nimport cx from 'classnames';\nimport autobind from 'class-autobind';\nimport EventEmitter from 'events';\nimport { BLOCK_TYPE } from 'draft-js-utils';\n\nimport './Draft.global.css';\nimport styles from './RichTextEditor.css';\n\nimport ButtonGroup from './ui/ButtonGroup';\nimport Button from './ui/Button';\nimport Dropdown from './ui/Dropdown';\n\nvar MAX_LIST_DEPTH = 2;\n\n// Custom overrides for \"code\" style.\nvar styleMap = {\n  CODE: {\n    backgroundColor: '#f3f3f3',\n    fontFamily: '\"Inconsolata\", \"Menlo\", \"Consolas\", monospace',\n    fontSize: 16,\n    padding: 2\n  }\n};\n\nvar RichTextEditor = function (_Component) {\n  _inherits(RichTextEditor, _Component);\n\n  function RichTextEditor() {\n    _classCallCheck(this, RichTextEditor);\n\n    var _this = _possibleConstructorReturn(this, (RichTextEditor.__proto__ || _Object$getPrototypeOf(RichTextEditor)).apply(this, arguments));\n\n    _this._keyEmitter = new EventEmitter();\n    autobind(_this);\n    return _this;\n  }\n\n  _createClass(RichTextEditor, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      var autoFocus = this.props.autoFocus;\n\n\n      if (!autoFocus) {\n        return;\n      }\n\n      this._focus();\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _cx;\n\n      var _props = this.props,\n          value = _props.value,\n          className = _props.className,\n          toolbarClassName = _props.toolbarClassName,\n          editorClassName = _props.editorClassName,\n          placeholder = _props.placeholder,\n          customStyleMap = _props.customStyleMap,\n          readOnly = _props.readOnly,\n          disabled = _props.disabled,\n          toolbarConfig = _props.toolbarConfig,\n          blockStyleFn = _props.blockStyleFn,\n          customControls = _props.customControls,\n          keyBindingFn = _props.keyBindingFn,\n          rootStyle = _props.rootStyle,\n          toolbarStyle = _props.toolbarStyle,\n          editorStyle = _props.editorStyle,\n          otherProps = _objectWithoutProperties(_props, ['value', 'className', 'toolbarClassName', 'editorClassName', 'placeholder', 'customStyleMap', 'readOnly', 'disabled', 'toolbarConfig', 'blockStyleFn', 'customControls', 'keyBindingFn', 'rootStyle', 'toolbarStyle', 'editorStyle']);\n\n      var editorState = value.getEditorState();\n      customStyleMap = customStyleMap ? _extends({}, styleMap, customStyleMap) : styleMap;\n\n      // If the user changes block type before entering any text, we can either\n      // style the placeholder or hide it. Let's just hide it for now.\n      var combinedEditorClassName = cx((_cx = {}, _defineProperty(_cx, styles.editor, true), _defineProperty(_cx, styles.hidePlaceholder, this._shouldHidePlaceholder()), _cx), editorClassName);\n      if (readOnly == null) {\n        readOnly = disabled;\n      }\n      var editorToolbar = void 0;\n      if (!readOnly) {\n        editorToolbar = React.createElement(EditorToolbar, {\n          rootStyle: toolbarStyle,\n          className: toolbarClassName,\n          keyEmitter: this._keyEmitter,\n          editorState: editorState,\n          onChange: this._onChange,\n          focusEditor: this._focus,\n          toolbarConfig: toolbarConfig,\n          customControls: customControls\n        });\n      }\n      return React.createElement(\n        'div',\n        { className: cx(styles.root, className), style: rootStyle },\n        editorToolbar,\n        React.createElement(\n          'div',\n          { className: combinedEditorClassName, style: editorStyle },\n          React.createElement(Editor, _extends({}, otherProps, {\n            blockStyleFn: composite(defaultBlockStyleFn, blockStyleFn),\n            customStyleMap: customStyleMap,\n            editorState: editorState,\n            handleReturn: this._handleReturn,\n            keyBindingFn: keyBindingFn || this._customKeyHandler,\n            handleKeyCommand: this._handleKeyCommand,\n            onTab: this._onTab,\n            onChange: this._onChange,\n            placeholder: placeholder,\n            ref: 'editor',\n            spellCheck: true,\n            readOnly: readOnly\n          }))\n        )\n      );\n    }\n  }, {\n    key: '_shouldHidePlaceholder',\n    value: function _shouldHidePlaceholder() {\n      var editorState = this.props.value.getEditorState();\n      var contentState = editorState.getCurrentContent();\n      if (!contentState.hasText()) {\n        if (contentState.getBlockMap().first().getType() !== 'unstyled') {\n          return true;\n        }\n      }\n      return false;\n    }\n  }, {\n    key: '_handleReturn',\n    value: function _handleReturn(event) {\n      var handleReturn = this.props.handleReturn;\n\n      if (handleReturn != null && handleReturn(event)) {\n        return true;\n      }\n      if (this._handleReturnSoftNewline(event)) {\n        return true;\n      }\n      if (this._handleReturnEmptyListItem()) {\n        return true;\n      }\n      if (this._handleReturnSpecialBlock()) {\n        return true;\n      }\n      return false;\n    }\n\n    // `shift + return` should insert a soft newline.\n\n  }, {\n    key: '_handleReturnSoftNewline',\n    value: function _handleReturnSoftNewline(event) {\n      var editorState = this.props.value.getEditorState();\n      if (isSoftNewlineEvent(event)) {\n        var selection = editorState.getSelection();\n        if (selection.isCollapsed()) {\n          this._onChange(RichUtils.insertSoftNewline(editorState));\n        } else {\n          var content = editorState.getCurrentContent();\n          var newContent = Modifier.removeRange(content, selection, 'forward');\n          var newSelection = newContent.getSelectionAfter();\n          var _block = newContent.getBlockForKey(newSelection.getStartKey());\n          newContent = Modifier.insertText(newContent, newSelection, '\\n', _block.getInlineStyleAt(newSelection.getStartOffset()), null);\n          this._onChange(EditorState.push(editorState, newContent, 'insert-fragment'));\n        }\n        return true;\n      }\n      return false;\n    }\n\n    // If the cursor is in an empty list item when return is pressed, then the\n    // block type should change to normal (end the list).\n\n  }, {\n    key: '_handleReturnEmptyListItem',\n    value: function _handleReturnEmptyListItem() {\n      var editorState = this.props.value.getEditorState();\n      var selection = editorState.getSelection();\n      if (selection.isCollapsed()) {\n        var contentState = editorState.getCurrentContent();\n        var blockKey = selection.getStartKey();\n        var _block2 = contentState.getBlockForKey(blockKey);\n        if (isListItem(_block2) && _block2.getLength() === 0) {\n          var depth = _block2.getDepth();\n          var newState = depth === 0 ? changeBlockType(editorState, blockKey, BLOCK_TYPE.UNSTYLED) : changeBlockDepth(editorState, blockKey, depth - 1);\n          this._onChange(newState);\n          return true;\n        }\n      }\n      return false;\n    }\n\n    // If the cursor is at the end of a special block (any block type other than\n    // normal or list item) when return is pressed, new block should be normal.\n\n  }, {\n    key: '_handleReturnSpecialBlock',\n    value: function _handleReturnSpecialBlock() {\n      var editorState = this.props.value.getEditorState();\n      var selection = editorState.getSelection();\n      if (selection.isCollapsed()) {\n        var contentState = editorState.getCurrentContent();\n        var blockKey = selection.getStartKey();\n        var _block3 = contentState.getBlockForKey(blockKey);\n        if (!isListItem(_block3) && _block3.getType() !== BLOCK_TYPE.UNSTYLED) {\n          // If cursor is at end.\n          if (_block3.getLength() === selection.getStartOffset()) {\n            var newEditorState = insertBlockAfter(editorState, blockKey, BLOCK_TYPE.UNSTYLED);\n            this._onChange(newEditorState);\n            return true;\n          }\n        }\n      }\n      return false;\n    }\n  }, {\n    key: '_onTab',\n    value: function _onTab(event) {\n      var editorState = this.props.value.getEditorState();\n      var newEditorState = RichUtils.onTab(event, editorState, MAX_LIST_DEPTH);\n      if (newEditorState !== editorState) {\n        this._onChange(newEditorState);\n      }\n    }\n  }, {\n    key: '_customKeyHandler',\n    value: function _customKeyHandler(event) {\n      // Allow toolbar to catch key combinations.\n      var eventFlags = {};\n      this._keyEmitter.emit('keypress', event, eventFlags);\n      if (eventFlags.wasHandled) {\n        return null;\n      } else {\n        return getDefaultKeyBinding(event);\n      }\n    }\n  }, {\n    key: '_handleKeyCommand',\n    value: function _handleKeyCommand(command) {\n      var editorState = this.props.value.getEditorState();\n      var newEditorState = RichUtils.handleKeyCommand(editorState, command);\n      if (newEditorState) {\n        this._onChange(newEditorState);\n        return true;\n      } else {\n        return false;\n      }\n    }\n  }, {\n    key: '_onChange',\n    value: function _onChange(editorState) {\n      var _props2 = this.props,\n          onChange = _props2.onChange,\n          value = _props2.value;\n\n      if (onChange == null) {\n        return;\n      }\n      var newValue = value.setEditorState(editorState);\n      var newEditorState = newValue.getEditorState();\n      this._handleInlineImageSelection(newEditorState);\n      onChange(newValue);\n    }\n  }, {\n    key: '_handleInlineImageSelection',\n    value: function _handleInlineImageSelection(editorState) {\n      var selection = editorState.getSelection();\n      var blocks = getBlocksInSelection(editorState);\n\n      var selectImage = function selectImage(block, offset) {\n        var imageKey = block.getEntityAt(offset);\n        Entity.mergeData(imageKey, { selected: true });\n      };\n\n      var isInMiddleBlock = function isInMiddleBlock(index) {\n        return index > 0 && index < blocks.size - 1;\n      };\n      var isWithinStartBlockSelection = function isWithinStartBlockSelection(offset, index) {\n        return index === 0 && offset > selection.getStartOffset();\n      };\n      var isWithinEndBlockSelection = function isWithinEndBlockSelection(offset, index) {\n        return index === blocks.size - 1 && offset < selection.getEndOffset();\n      };\n\n      blocks.toIndexedSeq().forEach(function (block, index) {\n        ImageDecorator.strategy(block, function (offset) {\n          if (isWithinStartBlockSelection(offset, index) || isInMiddleBlock(index) || isWithinEndBlockSelection(offset, index)) {\n            selectImage(block, offset);\n          }\n        });\n      });\n    }\n  }, {\n    key: '_focus',\n    value: function _focus() {\n      this.refs.editor.focus();\n    }\n  }]);\n\n  return RichTextEditor;\n}(Component);\n\nexport default RichTextEditor;\n\n\nfunction defaultBlockStyleFn(block) {\n  var result = styles.block;\n  switch (block.getType()) {\n    case 'unstyled':\n      return cx(result, styles.paragraph);\n    case 'blockquote':\n      return cx(result, styles.blockquote);\n    case 'code-block':\n      return cx(result, styles.codeBlock);\n    default:\n      return result;\n  }\n}\n\nvar decorator = new CompositeDecorator([LinkDecorator, ImageDecorator]);\n\nfunction createEmptyValue() {\n  return EditorValue.createEmpty(decorator);\n}\n\nfunction createValueFromString(markup, format, options) {\n  return EditorValue.createFromString(markup, format, decorator, options);\n}\n\n// $FlowIssue - This should probably not be done this way.\n_Object$assign(RichTextEditor, {\n  EditorValue: EditorValue,\n  decorator: decorator,\n  createEmptyValue: createEmptyValue,\n  createValueFromString: createValueFromString,\n  ButtonGroup: ButtonGroup,\n  Button: Button,\n  Dropdown: Dropdown\n});\n\nexport { EditorValue, decorator, createEmptyValue, createValueFromString, ButtonGroup, Button, Dropdown };"]},"metadata":{},"sourceType":"module"}