{"ast":null,"code":"import { EditorState } from 'draft-js';\nimport { OrderedMap } from 'immutable';\nexport default function getBlocksInSelection(editorState) {\n  var contentState = editorState.getCurrentContent();\n  var blockMap = contentState.getBlockMap();\n  var selection = editorState.getSelection();\n\n  if (selection.isCollapsed()) {\n    return new OrderedMap();\n  }\n\n  var startKey = selection.getStartKey();\n  var endKey = selection.getEndKey();\n\n  if (startKey === endKey) {\n    return new OrderedMap({\n      startKey: contentState.getBlockForKey(startKey)\n    });\n  }\n\n  var blocksUntilEnd = blockMap.takeUntil(function (block, key) {\n    return key === endKey;\n  });\n  return blocksUntilEnd.skipUntil(function (block, key) {\n    return key === startKey;\n  });\n}","map":{"version":3,"sources":["/Users/franklinrodriguez/Desktop/next-test/node_modules/react-rte/lib/lib/getBlocksInSelection.js"],"names":["EditorState","OrderedMap","getBlocksInSelection","editorState","contentState","getCurrentContent","blockMap","getBlockMap","selection","getSelection","isCollapsed","startKey","getStartKey","endKey","getEndKey","getBlockForKey","blocksUntilEnd","takeUntil","block","key","skipUntil"],"mappings":"AAAA,SAASA,WAAT,QAA4B,UAA5B;AACA,SAASC,UAAT,QAA2B,WAA3B;AAEA,eAAe,SAASC,oBAAT,CAA8BC,WAA9B,EAA2C;AACxD,MAAIC,YAAY,GAAGD,WAAW,CAACE,iBAAZ,EAAnB;AACA,MAAIC,QAAQ,GAAGF,YAAY,CAACG,WAAb,EAAf;AACA,MAAIC,SAAS,GAAGL,WAAW,CAACM,YAAZ,EAAhB;;AACA,MAAID,SAAS,CAACE,WAAV,EAAJ,EAA6B;AAC3B,WAAO,IAAIT,UAAJ,EAAP;AACD;;AAED,MAAIU,QAAQ,GAAGH,SAAS,CAACI,WAAV,EAAf;AACA,MAAIC,MAAM,GAAGL,SAAS,CAACM,SAAV,EAAb;;AACA,MAAIH,QAAQ,KAAKE,MAAjB,EAAyB;AACvB,WAAO,IAAIZ,UAAJ,CAAe;AAAEU,MAAAA,QAAQ,EAAEP,YAAY,CAACW,cAAb,CAA4BJ,QAA5B;AAAZ,KAAf,CAAP;AACD;;AACD,MAAIK,cAAc,GAAGV,QAAQ,CAACW,SAAT,CAAmB,UAAUC,KAAV,EAAiBC,GAAjB,EAAsB;AAC5D,WAAOA,GAAG,KAAKN,MAAf;AACD,GAFoB,CAArB;AAGA,SAAOG,cAAc,CAACI,SAAf,CAAyB,UAAUF,KAAV,EAAiBC,GAAjB,EAAsB;AACpD,WAAOA,GAAG,KAAKR,QAAf;AACD,GAFM,CAAP;AAGD","sourcesContent":["import { EditorState } from 'draft-js';\nimport { OrderedMap } from 'immutable';\n\nexport default function getBlocksInSelection(editorState) {\n  var contentState = editorState.getCurrentContent();\n  var blockMap = contentState.getBlockMap();\n  var selection = editorState.getSelection();\n  if (selection.isCollapsed()) {\n    return new OrderedMap();\n  }\n\n  var startKey = selection.getStartKey();\n  var endKey = selection.getEndKey();\n  if (startKey === endKey) {\n    return new OrderedMap({ startKey: contentState.getBlockForKey(startKey) });\n  }\n  var blocksUntilEnd = blockMap.takeUntil(function (block, key) {\n    return key === endKey;\n  });\n  return blocksUntilEnd.skipUntil(function (block, key) {\n    return key === startKey;\n  });\n}"]},"metadata":{},"sourceType":"module"}