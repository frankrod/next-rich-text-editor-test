{"ast":null,"code":"import _Array$from from 'babel-runtime/core-js/array/from';\nimport _Map from 'babel-runtime/core-js/map';\nimport _defineProperty from 'babel-runtime/helpers/defineProperty';\nimport _extends from 'babel-runtime/helpers/extends';\nimport _typeof from 'babel-runtime/helpers/typeof';\nimport _Object$getPrototypeOf from 'babel-runtime/core-js/object/get-prototype-of';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport { hasCommandModifier } from 'draft-js/lib/KeyBindingUtil';\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { EditorState, Entity, RichUtils, Modifier } from 'draft-js';\nimport { ENTITY_TYPE } from 'draft-js-utils';\nimport DefaultToolbarConfig from './EditorToolbarConfig';\nimport StyleButton from './StyleButton';\nimport PopoverIconButton from '../ui/PopoverIconButton';\nimport ButtonGroup from '../ui/ButtonGroup';\nimport Dropdown from '../ui/Dropdown';\nimport IconButton from '../ui/IconButton';\nimport getEntityAtCursor from './getEntityAtCursor';\nimport clearEntityForRange from './clearEntityForRange';\nimport autobind from 'class-autobind';\nimport cx from 'classnames';\nimport styles from './EditorToolbar.css';\n\nvar EditorToolbar = function (_Component) {\n  _inherits(EditorToolbar, _Component);\n\n  function EditorToolbar() {\n    _classCallCheck(this, EditorToolbar);\n\n    var _this = _possibleConstructorReturn(this, (EditorToolbar.__proto__ || _Object$getPrototypeOf(EditorToolbar)).apply(this, arguments));\n\n    autobind(_this);\n    _this.state = {\n      showLinkInput: false,\n      showImageInput: false,\n      customControlState: {}\n    };\n    return _this;\n  }\n\n  _createClass(EditorToolbar, [{\n    key: 'componentWillMount',\n    value: function componentWillMount() {\n      // Technically, we should also attach/detach event listeners when the\n      // `keyEmitter` prop changes.\n      this.props.keyEmitter.on('keypress', this._onKeypress);\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      this.props.keyEmitter.removeListener('keypress', this._onKeypress);\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      var _props = this.props,\n          className = _props.className,\n          toolbarConfig = _props.toolbarConfig,\n          rootStyle = _props.rootStyle;\n\n      if (toolbarConfig == null) {\n        toolbarConfig = DefaultToolbarConfig;\n      }\n\n      var display = toolbarConfig.display || DefaultToolbarConfig.display;\n      var buttonGroups = display.map(function (groupName) {\n        switch (groupName) {\n          case 'INLINE_STYLE_BUTTONS':\n            {\n              return _this2._renderInlineStyleButtons(groupName, toolbarConfig);\n            }\n\n          case 'BLOCK_TYPE_DROPDOWN':\n            {\n              return _this2._renderBlockTypeDropdown(groupName, toolbarConfig);\n            }\n\n          case 'LINK_BUTTONS':\n            {\n              return _this2._renderLinkButtons(groupName, toolbarConfig);\n            }\n\n          case 'IMAGE_BUTTON':\n            {\n              return _this2._renderImageButton(groupName, toolbarConfig);\n            }\n\n          case 'BLOCK_TYPE_BUTTONS':\n            {\n              return _this2._renderBlockTypeButtons(groupName, toolbarConfig);\n            }\n\n          case 'HISTORY_BUTTONS':\n            {\n              return _this2._renderUndoRedo(groupName, toolbarConfig);\n            }\n        }\n      });\n      return React.createElement('div', {\n        className: cx(styles.root, className),\n        style: rootStyle\n      }, buttonGroups, this._renderCustomControls());\n    }\n  }, {\n    key: '_renderCustomControls',\n    value: function _renderCustomControls() {\n      var _this3 = this;\n\n      var _props2 = this.props,\n          customControls = _props2.customControls,\n          editorState = _props2.editorState;\n\n      if (customControls == null) {\n        return;\n      }\n\n      return customControls.map(function (f) {\n        switch (typeof f === 'undefined' ? 'undefined' : _typeof(f)) {\n          case 'function':\n            {\n              return f(_this3._setCustomControlState, _this3._getCustomControlState, editorState);\n            }\n\n          default:\n            {\n              return f;\n            }\n        }\n      });\n    }\n  }, {\n    key: '_setCustomControlState',\n    value: function _setCustomControlState(key, value) {\n      this.setState(function (_ref) {\n        var customControlState = _ref.customControlState;\n        return {\n          customControlState: _extends({}, customControlState, _defineProperty({}, key, value))\n        };\n      });\n    }\n  }, {\n    key: '_getCustomControlState',\n    value: function _getCustomControlState(key) {\n      return this.state.customControlState[key];\n    }\n  }, {\n    key: '_renderBlockTypeDropdown',\n    value: function _renderBlockTypeDropdown(name, toolbarConfig) {\n      var blockType = this._getCurrentBlockType();\n\n      var choices = new _Map((toolbarConfig.BLOCK_TYPE_DROPDOWN || []).map(function (type) {\n        return [type.style, {\n          label: type.label,\n          className: type.className\n        }];\n      }));\n\n      if (!choices.has(blockType)) {\n        blockType = _Array$from(choices.keys())[0];\n      }\n\n      return React.createElement(ButtonGroup, {\n        key: name\n      }, React.createElement(Dropdown, _extends({}, toolbarConfig.extraProps, {\n        choices: choices,\n        selectedKey: blockType,\n        onChange: this._selectBlockType\n      })));\n    }\n  }, {\n    key: '_renderBlockTypeButtons',\n    value: function _renderBlockTypeButtons(name, toolbarConfig) {\n      var _this4 = this;\n\n      var blockType = this._getCurrentBlockType();\n\n      var buttons = (toolbarConfig.BLOCK_TYPE_BUTTONS || []).map(function (type, index) {\n        return React.createElement(StyleButton, _extends({}, toolbarConfig.extraProps, {\n          key: String(index),\n          isActive: type.style === blockType,\n          label: type.label,\n          onToggle: _this4._toggleBlockType,\n          style: type.style,\n          className: type.className\n        }));\n      });\n      return React.createElement(ButtonGroup, {\n        key: name\n      }, buttons);\n    }\n  }, {\n    key: '_renderInlineStyleButtons',\n    value: function _renderInlineStyleButtons(name, toolbarConfig) {\n      var _this5 = this;\n\n      var editorState = this.props.editorState;\n      var currentStyle = editorState.getCurrentInlineStyle();\n      var buttons = (toolbarConfig.INLINE_STYLE_BUTTONS || []).map(function (type, index) {\n        return React.createElement(StyleButton, _extends({}, toolbarConfig.extraProps, {\n          key: String(index),\n          isActive: currentStyle.has(type.style),\n          label: type.label,\n          onToggle: _this5._toggleInlineStyle,\n          style: type.style,\n          className: type.className\n        }));\n      });\n      return React.createElement(ButtonGroup, {\n        key: name\n      }, buttons);\n    }\n  }, {\n    key: '_renderLinkButtons',\n    value: function _renderLinkButtons(name, toolbarConfig) {\n      var editorState = this.props.editorState;\n      var selection = editorState.getSelection();\n\n      var entity = this._getEntityAtCursor();\n\n      var hasSelection = !selection.isCollapsed();\n      var isCursorOnLink = entity != null && entity.type === ENTITY_TYPE.LINK;\n      var shouldShowLinkButton = hasSelection || isCursorOnLink;\n      return React.createElement(ButtonGroup, {\n        key: name\n      }, React.createElement(PopoverIconButton, {\n        label: 'Link',\n        iconName: 'link',\n        isDisabled: !shouldShowLinkButton,\n        showPopover: this.state.showLinkInput,\n        onTogglePopover: this._toggleShowLinkInput,\n        onSubmit: this._setLink\n      }), React.createElement(IconButton, _extends({}, toolbarConfig.extraProps, {\n        label: 'Remove Link',\n        iconName: 'remove-link',\n        isDisabled: !isCursorOnLink,\n        onClick: this._removeLink,\n        focusOnClick: false\n      })));\n    }\n  }, {\n    key: '_renderImageButton',\n    value: function _renderImageButton(name) {\n      return React.createElement(ButtonGroup, {\n        key: name\n      }, React.createElement(PopoverIconButton, {\n        label: 'Image',\n        iconName: 'image',\n        showPopover: this.state.showImageInput,\n        onTogglePopover: this._toggleShowImageInput,\n        onSubmit: this._setImage\n      }));\n    }\n  }, {\n    key: '_renderUndoRedo',\n    value: function _renderUndoRedo(name, toolbarConfig) {\n      var editorState = this.props.editorState;\n      var canUndo = editorState.getUndoStack().size !== 0;\n      var canRedo = editorState.getRedoStack().size !== 0;\n      return React.createElement(ButtonGroup, {\n        key: name\n      }, React.createElement(IconButton, _extends({}, toolbarConfig.extraProps, {\n        label: 'Undo',\n        iconName: 'undo',\n        isDisabled: !canUndo,\n        onClick: this._undo,\n        focusOnClick: false\n      })), React.createElement(IconButton, _extends({}, toolbarConfig.extraProps, {\n        label: 'Redo',\n        iconName: 'redo',\n        isDisabled: !canRedo,\n        onClick: this._redo,\n        focusOnClick: false\n      })));\n    }\n  }, {\n    key: '_onKeypress',\n    value: function _onKeypress(event, eventFlags) {\n      // Catch cmd+k for use with link insertion.\n      if (hasCommandModifier(event) && event.keyCode === 75) {\n        var _editorState = this.props.editorState;\n\n        if (!_editorState.getSelection().isCollapsed()) {\n          this.setState({\n            showLinkInput: true\n          });\n          eventFlags.wasHandled = true;\n        }\n      }\n    }\n  }, {\n    key: '_toggleShowLinkInput',\n    value: function _toggleShowLinkInput(event) {\n      var isShowing = this.state.showLinkInput; // If this is a hide request, decide if we should focus the editor.\n\n      if (isShowing) {\n        var shouldFocusEditor = true;\n\n        if (event && event.type === 'click') {\n          // TODO: Use a better way to get the editor root node.\n          var editorRoot = ReactDOM.findDOMNode(this).parentNode;\n          var _document = document,\n              activeElement = _document.activeElement;\n          var wasClickAway = activeElement == null || activeElement === document.body;\n\n          if (!wasClickAway && !editorRoot.contains(activeElement)) {\n            shouldFocusEditor = false;\n          }\n        }\n\n        if (shouldFocusEditor) {\n          this.props.focusEditor();\n        }\n      }\n\n      this.setState({\n        showLinkInput: !isShowing\n      });\n    }\n  }, {\n    key: '_toggleShowImageInput',\n    value: function _toggleShowImageInput(event) {\n      var isShowing = this.state.showImageInput; // If this is a hide request, decide if we should focus the editor.\n\n      if (isShowing) {\n        var shouldFocusEditor = true;\n\n        if (event && event.type === 'click') {\n          // TODO: Use a better way to get the editor root node.\n          var editorRoot = ReactDOM.findDOMNode(this).parentNode;\n          var _document2 = document,\n              activeElement = _document2.activeElement;\n          var wasClickAway = activeElement == null || activeElement === document.body;\n\n          if (!wasClickAway && !editorRoot.contains(activeElement)) {\n            shouldFocusEditor = false;\n          }\n        }\n\n        if (shouldFocusEditor) {\n          this.props.focusEditor();\n        }\n      }\n\n      this.setState({\n        showImageInput: !isShowing\n      });\n    }\n  }, {\n    key: '_setImage',\n    value: function _setImage(src) {\n      var editorState = this.props.editorState;\n      var contentState = editorState.getCurrentContent();\n      var selection = editorState.getSelection();\n      contentState = contentState.createEntity(ENTITY_TYPE.IMAGE, 'IMMUTABLE', {\n        src: src\n      });\n      var entityKey = contentState.getLastCreatedEntityKey();\n      var newContentState = Modifier.insertText(contentState, selection, ' ', null, entityKey);\n      this.setState({\n        showImageInput: false\n      });\n      this.props.onChange(EditorState.push(editorState, newContentState));\n\n      this._focusEditor();\n    }\n  }, {\n    key: '_setLink',\n    value: function _setLink(url) {\n      var editorState = this.props.editorState;\n      var contentState = editorState.getCurrentContent();\n      var selection = editorState.getSelection();\n      contentState = contentState.createEntity(ENTITY_TYPE.LINK, 'MUTABLE', {\n        url: url\n      });\n      var entityKey = contentState.getLastCreatedEntityKey();\n      var newEditorState = EditorState.push(editorState, contentState);\n      this.setState({\n        showLinkInput: false\n      });\n      this.props.onChange(RichUtils.toggleLink(newEditorState, selection, entityKey));\n\n      this._focusEditor();\n    }\n  }, {\n    key: '_removeLink',\n    value: function _removeLink() {\n      var editorState = this.props.editorState;\n      var entity = getEntityAtCursor(editorState);\n\n      if (entity != null) {\n        var blockKey = entity.blockKey,\n            startOffset = entity.startOffset,\n            endOffset = entity.endOffset;\n        this.props.onChange(clearEntityForRange(editorState, blockKey, startOffset, endOffset));\n      }\n    }\n  }, {\n    key: '_getEntityAtCursor',\n    value: function _getEntityAtCursor() {\n      var editorState = this.props.editorState;\n      var contentState = editorState.getCurrentContent();\n      var entity = getEntityAtCursor(editorState);\n      return entity == null ? null : contentState.getEntity(entity.entityKey);\n    }\n  }, {\n    key: '_getCurrentBlockType',\n    value: function _getCurrentBlockType() {\n      var editorState = this.props.editorState;\n      var selection = editorState.getSelection();\n      return editorState.getCurrentContent().getBlockForKey(selection.getStartKey()).getType();\n    }\n  }, {\n    key: '_selectBlockType',\n    value: function _selectBlockType() {\n      this._toggleBlockType.apply(this, arguments);\n\n      this._focusEditor();\n    }\n  }, {\n    key: '_toggleBlockType',\n    value: function _toggleBlockType(blockType) {\n      this.props.onChange(RichUtils.toggleBlockType(this.props.editorState, blockType));\n    }\n  }, {\n    key: '_toggleInlineStyle',\n    value: function _toggleInlineStyle(inlineStyle) {\n      this.props.onChange(RichUtils.toggleInlineStyle(this.props.editorState, inlineStyle));\n    }\n  }, {\n    key: '_undo',\n    value: function _undo() {\n      var editorState = this.props.editorState;\n      this.props.onChange(EditorState.undo(editorState));\n    }\n  }, {\n    key: '_redo',\n    value: function _redo() {\n      var editorState = this.props.editorState;\n      this.props.onChange(EditorState.redo(editorState));\n    }\n  }, {\n    key: '_focusEditor',\n    value: function _focusEditor() {\n      var _this6 = this; // Hacky: Wait to focus the editor so we don't lose selection.\n\n\n      setTimeout(function () {\n        _this6.props.focusEditor();\n      }, 50);\n    }\n  }]);\n\n  return EditorToolbar;\n}(Component);\n\nexport default EditorToolbar;","map":{"version":3,"sources":["/Users/franklinrodriguez/Desktop/next-test/node_modules/react-rte/lib/lib/EditorToolbar.js"],"names":["_Array$from","_Map","_defineProperty","_extends","_typeof","_Object$getPrototypeOf","_classCallCheck","_createClass","_possibleConstructorReturn","_inherits","hasCommandModifier","React","Component","ReactDOM","EditorState","Entity","RichUtils","Modifier","ENTITY_TYPE","DefaultToolbarConfig","StyleButton","PopoverIconButton","ButtonGroup","Dropdown","IconButton","getEntityAtCursor","clearEntityForRange","autobind","cx","styles","EditorToolbar","_Component","_this","__proto__","apply","arguments","state","showLinkInput","showImageInput","customControlState","key","value","componentWillMount","props","keyEmitter","on","_onKeypress","componentWillUnmount","removeListener","render","_this2","_props","className","toolbarConfig","rootStyle","display","buttonGroups","map","groupName","_renderInlineStyleButtons","_renderBlockTypeDropdown","_renderLinkButtons","_renderImageButton","_renderBlockTypeButtons","_renderUndoRedo","createElement","root","style","_renderCustomControls","_this3","_props2","customControls","editorState","f","_setCustomControlState","_getCustomControlState","setState","_ref","name","blockType","_getCurrentBlockType","choices","BLOCK_TYPE_DROPDOWN","type","label","has","keys","extraProps","selectedKey","onChange","_selectBlockType","_this4","buttons","BLOCK_TYPE_BUTTONS","index","String","isActive","onToggle","_toggleBlockType","_this5","currentStyle","getCurrentInlineStyle","INLINE_STYLE_BUTTONS","_toggleInlineStyle","selection","getSelection","entity","_getEntityAtCursor","hasSelection","isCollapsed","isCursorOnLink","LINK","shouldShowLinkButton","iconName","isDisabled","showPopover","onTogglePopover","_toggleShowLinkInput","onSubmit","_setLink","onClick","_removeLink","focusOnClick","_toggleShowImageInput","_setImage","canUndo","getUndoStack","size","canRedo","getRedoStack","_undo","_redo","event","eventFlags","keyCode","_editorState","wasHandled","isShowing","shouldFocusEditor","editorRoot","findDOMNode","parentNode","_document","document","activeElement","wasClickAway","body","contains","focusEditor","_document2","src","contentState","getCurrentContent","createEntity","IMAGE","entityKey","getLastCreatedEntityKey","newContentState","insertText","push","_focusEditor","url","newEditorState","toggleLink","blockKey","startOffset","endOffset","getEntity","getBlockForKey","getStartKey","getType","toggleBlockType","inlineStyle","toggleInlineStyle","undo","redo","_this6","setTimeout"],"mappings":"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","sourcesContent":["import _Array$from from 'babel-runtime/core-js/array/from';\nimport _Map from 'babel-runtime/core-js/map';\nimport _defineProperty from 'babel-runtime/helpers/defineProperty';\nimport _extends from 'babel-runtime/helpers/extends';\nimport _typeof from 'babel-runtime/helpers/typeof';\nimport _Object$getPrototypeOf from 'babel-runtime/core-js/object/get-prototype-of';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport { hasCommandModifier } from 'draft-js/lib/KeyBindingUtil';\n\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { EditorState, Entity, RichUtils, Modifier } from 'draft-js';\nimport { ENTITY_TYPE } from 'draft-js-utils';\nimport DefaultToolbarConfig from './EditorToolbarConfig';\nimport StyleButton from './StyleButton';\nimport PopoverIconButton from '../ui/PopoverIconButton';\nimport ButtonGroup from '../ui/ButtonGroup';\nimport Dropdown from '../ui/Dropdown';\nimport IconButton from '../ui/IconButton';\nimport getEntityAtCursor from './getEntityAtCursor';\nimport clearEntityForRange from './clearEntityForRange';\nimport autobind from 'class-autobind';\nimport cx from 'classnames';\n\nimport styles from './EditorToolbar.css';\n\nvar EditorToolbar = function (_Component) {\n  _inherits(EditorToolbar, _Component);\n\n  function EditorToolbar() {\n    _classCallCheck(this, EditorToolbar);\n\n    var _this = _possibleConstructorReturn(this, (EditorToolbar.__proto__ || _Object$getPrototypeOf(EditorToolbar)).apply(this, arguments));\n\n    autobind(_this);\n    _this.state = {\n      showLinkInput: false,\n      showImageInput: false,\n      customControlState: {}\n    };\n    return _this;\n  }\n\n  _createClass(EditorToolbar, [{\n    key: 'componentWillMount',\n    value: function componentWillMount() {\n      // Technically, we should also attach/detach event listeners when the\n      // `keyEmitter` prop changes.\n      this.props.keyEmitter.on('keypress', this._onKeypress);\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      this.props.keyEmitter.removeListener('keypress', this._onKeypress);\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      var _props = this.props,\n          className = _props.className,\n          toolbarConfig = _props.toolbarConfig,\n          rootStyle = _props.rootStyle;\n\n      if (toolbarConfig == null) {\n        toolbarConfig = DefaultToolbarConfig;\n      }\n      var display = toolbarConfig.display || DefaultToolbarConfig.display;\n      var buttonGroups = display.map(function (groupName) {\n        switch (groupName) {\n          case 'INLINE_STYLE_BUTTONS':\n            {\n              return _this2._renderInlineStyleButtons(groupName, toolbarConfig);\n            }\n          case 'BLOCK_TYPE_DROPDOWN':\n            {\n              return _this2._renderBlockTypeDropdown(groupName, toolbarConfig);\n            }\n          case 'LINK_BUTTONS':\n            {\n              return _this2._renderLinkButtons(groupName, toolbarConfig);\n            }\n          case 'IMAGE_BUTTON':\n            {\n              return _this2._renderImageButton(groupName, toolbarConfig);\n            }\n          case 'BLOCK_TYPE_BUTTONS':\n            {\n              return _this2._renderBlockTypeButtons(groupName, toolbarConfig);\n            }\n          case 'HISTORY_BUTTONS':\n            {\n              return _this2._renderUndoRedo(groupName, toolbarConfig);\n            }\n        }\n      });\n      return React.createElement(\n        'div',\n        { className: cx(styles.root, className), style: rootStyle },\n        buttonGroups,\n        this._renderCustomControls()\n      );\n    }\n  }, {\n    key: '_renderCustomControls',\n    value: function _renderCustomControls() {\n      var _this3 = this;\n\n      var _props2 = this.props,\n          customControls = _props2.customControls,\n          editorState = _props2.editorState;\n\n      if (customControls == null) {\n        return;\n      }\n      return customControls.map(function (f) {\n        switch (typeof f === 'undefined' ? 'undefined' : _typeof(f)) {\n          case 'function':\n            {\n              return f(_this3._setCustomControlState, _this3._getCustomControlState, editorState);\n            }\n          default:\n            {\n              return f;\n            }\n        }\n      });\n    }\n  }, {\n    key: '_setCustomControlState',\n    value: function _setCustomControlState(key, value) {\n      this.setState(function (_ref) {\n        var customControlState = _ref.customControlState;\n        return {\n          customControlState: _extends({}, customControlState, _defineProperty({}, key, value))\n        };\n      });\n    }\n  }, {\n    key: '_getCustomControlState',\n    value: function _getCustomControlState(key) {\n      return this.state.customControlState[key];\n    }\n  }, {\n    key: '_renderBlockTypeDropdown',\n    value: function _renderBlockTypeDropdown(name, toolbarConfig) {\n      var blockType = this._getCurrentBlockType();\n      var choices = new _Map((toolbarConfig.BLOCK_TYPE_DROPDOWN || []).map(function (type) {\n        return [type.style, { label: type.label, className: type.className }];\n      }));\n      if (!choices.has(blockType)) {\n        blockType = _Array$from(choices.keys())[0];\n      }\n      return React.createElement(\n        ButtonGroup,\n        { key: name },\n        React.createElement(Dropdown, _extends({}, toolbarConfig.extraProps, {\n          choices: choices,\n          selectedKey: blockType,\n          onChange: this._selectBlockType\n        }))\n      );\n    }\n  }, {\n    key: '_renderBlockTypeButtons',\n    value: function _renderBlockTypeButtons(name, toolbarConfig) {\n      var _this4 = this;\n\n      var blockType = this._getCurrentBlockType();\n      var buttons = (toolbarConfig.BLOCK_TYPE_BUTTONS || []).map(function (type, index) {\n        return React.createElement(StyleButton, _extends({}, toolbarConfig.extraProps, {\n          key: String(index),\n          isActive: type.style === blockType,\n          label: type.label,\n          onToggle: _this4._toggleBlockType,\n          style: type.style,\n          className: type.className\n        }));\n      });\n      return React.createElement(\n        ButtonGroup,\n        { key: name },\n        buttons\n      );\n    }\n  }, {\n    key: '_renderInlineStyleButtons',\n    value: function _renderInlineStyleButtons(name, toolbarConfig) {\n      var _this5 = this;\n\n      var editorState = this.props.editorState;\n\n      var currentStyle = editorState.getCurrentInlineStyle();\n      var buttons = (toolbarConfig.INLINE_STYLE_BUTTONS || []).map(function (type, index) {\n        return React.createElement(StyleButton, _extends({}, toolbarConfig.extraProps, {\n          key: String(index),\n          isActive: currentStyle.has(type.style),\n          label: type.label,\n          onToggle: _this5._toggleInlineStyle,\n          style: type.style,\n          className: type.className\n        }));\n      });\n      return React.createElement(\n        ButtonGroup,\n        { key: name },\n        buttons\n      );\n    }\n  }, {\n    key: '_renderLinkButtons',\n    value: function _renderLinkButtons(name, toolbarConfig) {\n      var editorState = this.props.editorState;\n\n      var selection = editorState.getSelection();\n      var entity = this._getEntityAtCursor();\n      var hasSelection = !selection.isCollapsed();\n      var isCursorOnLink = entity != null && entity.type === ENTITY_TYPE.LINK;\n      var shouldShowLinkButton = hasSelection || isCursorOnLink;\n      return React.createElement(\n        ButtonGroup,\n        { key: name },\n        React.createElement(PopoverIconButton, {\n          label: 'Link',\n          iconName: 'link',\n          isDisabled: !shouldShowLinkButton,\n          showPopover: this.state.showLinkInput,\n          onTogglePopover: this._toggleShowLinkInput,\n          onSubmit: this._setLink\n        }),\n        React.createElement(IconButton, _extends({}, toolbarConfig.extraProps, {\n          label: 'Remove Link',\n          iconName: 'remove-link',\n          isDisabled: !isCursorOnLink,\n          onClick: this._removeLink,\n          focusOnClick: false\n        }))\n      );\n    }\n  }, {\n    key: '_renderImageButton',\n    value: function _renderImageButton(name) {\n      return React.createElement(\n        ButtonGroup,\n        { key: name },\n        React.createElement(PopoverIconButton, {\n          label: 'Image',\n          iconName: 'image',\n          showPopover: this.state.showImageInput,\n          onTogglePopover: this._toggleShowImageInput,\n          onSubmit: this._setImage\n        })\n      );\n    }\n  }, {\n    key: '_renderUndoRedo',\n    value: function _renderUndoRedo(name, toolbarConfig) {\n      var editorState = this.props.editorState;\n\n      var canUndo = editorState.getUndoStack().size !== 0;\n      var canRedo = editorState.getRedoStack().size !== 0;\n      return React.createElement(\n        ButtonGroup,\n        { key: name },\n        React.createElement(IconButton, _extends({}, toolbarConfig.extraProps, {\n          label: 'Undo',\n          iconName: 'undo',\n          isDisabled: !canUndo,\n          onClick: this._undo,\n          focusOnClick: false\n        })),\n        React.createElement(IconButton, _extends({}, toolbarConfig.extraProps, {\n          label: 'Redo',\n          iconName: 'redo',\n          isDisabled: !canRedo,\n          onClick: this._redo,\n          focusOnClick: false\n        }))\n      );\n    }\n  }, {\n    key: '_onKeypress',\n    value: function _onKeypress(event, eventFlags) {\n      // Catch cmd+k for use with link insertion.\n      if (hasCommandModifier(event) && event.keyCode === 75) {\n        var _editorState = this.props.editorState;\n\n        if (!_editorState.getSelection().isCollapsed()) {\n          this.setState({ showLinkInput: true });\n          eventFlags.wasHandled = true;\n        }\n      }\n    }\n  }, {\n    key: '_toggleShowLinkInput',\n    value: function _toggleShowLinkInput(event) {\n      var isShowing = this.state.showLinkInput;\n      // If this is a hide request, decide if we should focus the editor.\n      if (isShowing) {\n        var shouldFocusEditor = true;\n        if (event && event.type === 'click') {\n          // TODO: Use a better way to get the editor root node.\n          var editorRoot = ReactDOM.findDOMNode(this).parentNode;\n          var _document = document,\n              activeElement = _document.activeElement;\n\n          var wasClickAway = activeElement == null || activeElement === document.body;\n          if (!wasClickAway && !editorRoot.contains(activeElement)) {\n            shouldFocusEditor = false;\n          }\n        }\n        if (shouldFocusEditor) {\n          this.props.focusEditor();\n        }\n      }\n      this.setState({ showLinkInput: !isShowing });\n    }\n  }, {\n    key: '_toggleShowImageInput',\n    value: function _toggleShowImageInput(event) {\n      var isShowing = this.state.showImageInput;\n      // If this is a hide request, decide if we should focus the editor.\n      if (isShowing) {\n        var shouldFocusEditor = true;\n        if (event && event.type === 'click') {\n          // TODO: Use a better way to get the editor root node.\n          var editorRoot = ReactDOM.findDOMNode(this).parentNode;\n          var _document2 = document,\n              activeElement = _document2.activeElement;\n\n          var wasClickAway = activeElement == null || activeElement === document.body;\n          if (!wasClickAway && !editorRoot.contains(activeElement)) {\n            shouldFocusEditor = false;\n          }\n        }\n        if (shouldFocusEditor) {\n          this.props.focusEditor();\n        }\n      }\n      this.setState({ showImageInput: !isShowing });\n    }\n  }, {\n    key: '_setImage',\n    value: function _setImage(src) {\n      var editorState = this.props.editorState;\n\n      var contentState = editorState.getCurrentContent();\n      var selection = editorState.getSelection();\n      contentState = contentState.createEntity(ENTITY_TYPE.IMAGE, 'IMMUTABLE', { src: src });\n      var entityKey = contentState.getLastCreatedEntityKey();\n      var newContentState = Modifier.insertText(contentState, selection, ' ', null, entityKey);\n      this.setState({ showImageInput: false });\n      this.props.onChange(EditorState.push(editorState, newContentState));\n      this._focusEditor();\n    }\n  }, {\n    key: '_setLink',\n    value: function _setLink(url) {\n      var editorState = this.props.editorState;\n\n      var contentState = editorState.getCurrentContent();\n      var selection = editorState.getSelection();\n      contentState = contentState.createEntity(ENTITY_TYPE.LINK, 'MUTABLE', { url: url });\n      var entityKey = contentState.getLastCreatedEntityKey();\n      var newEditorState = EditorState.push(editorState, contentState);\n      this.setState({ showLinkInput: false });\n      this.props.onChange(RichUtils.toggleLink(newEditorState, selection, entityKey));\n      this._focusEditor();\n    }\n  }, {\n    key: '_removeLink',\n    value: function _removeLink() {\n      var editorState = this.props.editorState;\n\n      var entity = getEntityAtCursor(editorState);\n      if (entity != null) {\n        var blockKey = entity.blockKey,\n            startOffset = entity.startOffset,\n            endOffset = entity.endOffset;\n\n        this.props.onChange(clearEntityForRange(editorState, blockKey, startOffset, endOffset));\n      }\n    }\n  }, {\n    key: '_getEntityAtCursor',\n    value: function _getEntityAtCursor() {\n      var editorState = this.props.editorState;\n\n      var contentState = editorState.getCurrentContent();\n      var entity = getEntityAtCursor(editorState);\n      return entity == null ? null : contentState.getEntity(entity.entityKey);\n    }\n  }, {\n    key: '_getCurrentBlockType',\n    value: function _getCurrentBlockType() {\n      var editorState = this.props.editorState;\n\n      var selection = editorState.getSelection();\n      return editorState.getCurrentContent().getBlockForKey(selection.getStartKey()).getType();\n    }\n  }, {\n    key: '_selectBlockType',\n    value: function _selectBlockType() {\n      this._toggleBlockType.apply(this, arguments);\n      this._focusEditor();\n    }\n  }, {\n    key: '_toggleBlockType',\n    value: function _toggleBlockType(blockType) {\n      this.props.onChange(RichUtils.toggleBlockType(this.props.editorState, blockType));\n    }\n  }, {\n    key: '_toggleInlineStyle',\n    value: function _toggleInlineStyle(inlineStyle) {\n      this.props.onChange(RichUtils.toggleInlineStyle(this.props.editorState, inlineStyle));\n    }\n  }, {\n    key: '_undo',\n    value: function _undo() {\n      var editorState = this.props.editorState;\n\n      this.props.onChange(EditorState.undo(editorState));\n    }\n  }, {\n    key: '_redo',\n    value: function _redo() {\n      var editorState = this.props.editorState;\n\n      this.props.onChange(EditorState.redo(editorState));\n    }\n  }, {\n    key: '_focusEditor',\n    value: function _focusEditor() {\n      var _this6 = this;\n\n      // Hacky: Wait to focus the editor so we don't lose selection.\n      setTimeout(function () {\n        _this6.props.focusEditor();\n      }, 50);\n    }\n  }]);\n\n  return EditorToolbar;\n}(Component);\n\nexport default EditorToolbar;"]},"metadata":{},"sourceType":"module"}